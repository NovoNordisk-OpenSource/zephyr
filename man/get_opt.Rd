% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_opt.R
\name{get_opt}
\alias{get_opt}
\title{Get option using the \code{options} package, allowing a global option}
\usage{
get_opt(
  opt_name = NULL,
  global_opt_name = paste0("atmos.", opt_name),
  env = ns_of_call()
)
}
\arguments{
\item{opt_name}{\code{character} name of the option}

\item{global_opt_name}{\code{character} name of the global option which, if set,
will overwrite the package level option}

\item{env}{\code{environment} the environment to get the option from. As default
the namespace of the package where the function at the top of the call stack
comes from}
}
\value{
Value of the option
}
\description{
Get option using the \code{options} package, as a default from the package from
which the function at the top of the call stack originates, so other
functions in this package can be used inside any package, and it will
automatically use the options set within that package. Also, the
function allows a global option to overwrite individual package options.
}
\examples{
# Setting a "global option" overwrites the behavior, i.e. example below will
# never write anything to the console no matter the option set in the
# callisto package
withr::with_options(list(atmos.verbosity_level = "quiet",
                         callisto.verbosity_level = "verbose"),
                    callisto::filter_with_popdata(
                       pharmaverseadam::adlb,
                       infilter = PARAMCD == "BILIS",
                       popdata = pharmaverseadam::adsl,
                       popfilter = SAFFL == "Y"))
}
