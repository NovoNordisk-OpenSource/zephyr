[{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2024 Novo Nordisk A/S, Danish company registration no. 24256790  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aksel Thomsen. Author, maintainer. Mathias Lerbech Jeppesen. Author. Cervan Girard. Author. Kristian Troejelsgaard Nielsen. Author. Lovemore Gakava. Author. Steffen Falgreen Larsen. Author. Vladimir Obucina. Author. Novo Nordisk /S. Copyright holder.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomsen , Jeppesen M, Girard C, Nielsen K, Gakava L, Larsen S, Obucina V (2024). zephyr: Tools informing users based package options. R package version 0.0.1, https://jubilant-adventure-yr95p3g.pages.github.io/.","code":"@Manual{,   title = {zephyr: Tools for informing users based on package options},   author = {Aksel Thomsen and Mathias Lerbech Jeppesen and Cervan Girard and Kristian Troejelsgaard Nielsen and Lovemore Gakava and Steffen Falgreen Larsen and Vladimir Obucina},   year = {2024},   note = {R package version 0.0.1},   url = {https://jubilant-adventure-yr95p3g.pages.github.io/}, }"},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/index.html","id":"zephyr","dir":"","previous_headings":"","what":"Tools for informing users based on package options","title":"Tools for informing users based on package options","text":"package tools developers R packages, writing messages based options set developer’s package. package assumes options set using options package.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/get_opt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get option using the options package, allowing a global option — get_opt","title":"Get option using the options package, allowing a global option — get_opt","text":"Get option using options package, function allows global option overwrite individual package options.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/get_opt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get option using the options package, allowing a global option — get_opt","text":"","code":"get_opt(opt_name = NULL, env = parent.frame())"},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/get_opt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get option using the options package, allowing a global option — get_opt","text":"opt_name character name option env environment environment get option . default namespace package function top call stack comes ","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/get_opt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get option using the options package, allowing a global option — get_opt","text":"Value option","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/get_opt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get option using the options package, allowing a global option — get_opt","text":"","code":"# Setting a \"global option\" overwrites the behavior, i.e. example below will # never write anything to the console no matter the option set in the # callisto package if (FALSE) { withr::with_options(list(zephyr.verbosity_level = \"quiet\",                          callisto.verbosity_level = \"verbose\"),                     callisto::filter_with_popdata(                        pharmaverseadam::adlb,                        infilter = PARAMCD == \"BILIS\",                        popdata = pharmaverseadam::adsl,                        popfilter = SAFFL == \"Y\")) }"},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Write messages based on verbosity level — msg","title":"Write messages based on verbosity level — msg","text":"msg function general function writing messages console based options set using options package. default, option called verbosity_level set package defining function calling msg used. global option prefix zephyr. set, overwrite package level option. Valid values quiet, verbose debug. verbose used levels_to_write vector argument developer wants inform user something. debug ised developer wants give user extra information can help debugging. See example possible use case.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write messages based on verbosity level — msg","text":"","code":"msg(   message,   levels_to_write = c(\"verbose\", \"debug\"),   msg_fun = cli::cli_alert_info,   ...,   opt_name = \"verbosity_level\",   which = -1,   .envir = parent.frame() )  msg_debug(message, ..., opt_name = \"verbosity_level\", .envir = parent.frame())  msg_success(   message,   ...,   opt_name = \"verbosity_level\",   .envir = parent.frame() )"},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write messages based on verbosity level — msg","text":"message character message write levels_to_write character vector levels verbosity display message. Valid values quiet, verbose debug msg_fun function taking message first argument. Usually cli_... function ... Additional arguments passed msg_fun opt_name character name option set options package. Passed get_opt() integer passed sys.function(). Default -1, meaning sys.function(-1) return function called msg .envir environment passed msg_fun","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/msg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write messages based on verbosity level — msg","text":"msg function general function, can used write messages based options. msg_debug function wrapper around msg levels_to_write = \"debug\" msg_fun = cli::cli_inform, msg_success function wrapper around msg levels_to_write = c(\"verbose\", \"debug\") msg_fun = cli::cli_alert_success.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/msg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write messages based on verbosity level — msg","text":"","code":"if (FALSE) { # Use the `msg` function to give end user information depending on the # verbosity level set in the package options. Fx. if such an option is set # in a package called `callisto` with `options::define_option(\"verbosity_level\", ...)`, # then `msg` can be used inside function definition in that package like so: callisto::filter_with_popdata <- function(data, popfilter, ...) {  msg(\"Filtering {.field data} with {.field {popfilter}}\",            levels_to_write = c(\"verbose\", \"debug\"),            msg_fun = cli::cli_h2)   msg_debug(\"Trying to filter data\")  dplyr::filter(data, ...)  msg_success(\"Filtered data with filter {.field {popfilter}}\") } }"},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/report_checkmate_assertations.html","id":null,"dir":"Reference","previous_headings":"","what":"Report collection of assertations — report_checkmate_assertations","title":"Report collection of assertations — report_checkmate_assertations","text":"Improved reporting AssertColellections created checkmate::makeAssertCollection() package using cli::cli_abort() instead checkmate::reportAssertions() order provide informative error message. function intended used inside function performs assertations input arguments. See example.","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/report_checkmate_assertations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report collection of assertations — report_checkmate_assertations","text":"","code":"report_checkmate_assertations(   collection,   msg = \"Invalid input(s):\",   env = parent.frame() )"},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/report_checkmate_assertations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report collection of assertations — report_checkmate_assertations","text":"collection collection assertations created checkmate::makeAssertCollection() msg character() Header error message assertations failed env environment() Environment use error message","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/report_checkmate_assertations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report collection of assertations — report_checkmate_assertations","text":"","code":"add_numbers <- function(a, b) {   collection <- checkmate::makeAssertCollection()   checkmate::assert_numeric(x = a, add = collection)   checkmate::assert_numeric(x = b, add = collection)   report_checkmate_assertations(collection)   return(a + b) } # \\donttest{ add_numbers(1, 2) #> [1] 3 add_numbers(1, \"b\") #> Error in add_numbers(1, \"b\"): Invalid input(s): #> ✖ Variable 'b': Must be of type 'numeric', not 'character'. add_numbers(\"a\", \"b\") #> Error in add_numbers(\"a\", \"b\"): Invalid input(s): #> ✖ Variable 'a': Must be of type 'numeric', not 'character'. #> ✖ Variable 'b': Must be of type 'numeric', not 'character'. # }"},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/zephyr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"zephyr: Template repository for new ATMOS R packages — zephyr-package","title":"zephyr: Template repository for new ATMOS R packages — zephyr-package","text":"Defines common standards, workflows, actions new R packages.","code":""},{"path":[]},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/reference/zephyr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"zephyr: Template repository for new ATMOS R packages — zephyr-package","text":"Maintainer: First Last first.last@example.com (ORCID) contributors: Novo Nordisk /S [copyright holder]","code":""},{"path":"https://jubilant-adventure-yr95p3g.pages.github.io/news/index.html","id":"zephyr-001","dir":"Changelog","previous_headings":"","what":"zephyr 0.0.1","title":"zephyr 0.0.1","text":"Added initial tools writing messages console based package options","code":""}]
